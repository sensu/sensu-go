"""
Rule holds information that describes an action that can be taken
"""
type Rule {
  """
  Verbs is a list of verbs that apply to all of the listed resources for this
  rule. These include "get", "list", "watch", "create", "update", "delete".
  TODO: add support for "patch" (this is expensive and should be delayed
  until a further release). TODO: add support for "watch" (via websockets)
  """
  verbs: [String!]!
  """
  Resources is a list of resources that this rule applies to. "*" represents
  all resources.
  """
  resources: [String!]!
  """
  ResourceNames is an optional list of resource names that the rule applies
  to.
  """
  resourceNames: [String!]!
}

"""
ClusterRole applies to all namespaces within a cluster.
"""
type ClusterRole implements Node & Resource {
  "The globally unique identifier of the record"
  id: ID!

  "metadata contains name, namespace, labels and annotations of the record"
  metadata: ObjectMeta

  "List of rules associated with the given role"
  rules: [Rule!]

  "Name of the ClusterRole"
  name: String!

  """
  toJSON returns a REST API compatible representation of the resource. Handy for
  sharing snippets that can then be imported with `sensuctl create`.
  """
  toJSON: JSON!
}

"""
Role applies only to a single namespace.
"""
type Role implements Node & Resource {
  "The globally unique identifier of the record"
  id: ID!

  "metadata contains name, namespace, labels and annotations of the record"
  metadata: ObjectMeta

  "List of rules associated with the given role"
  rules: [Rule!]

  """
  toJSON returns a REST API compatible representation of the resource. Handy for
  sharing snippets that can then be imported with `sensuctl create`.
  """
  toJSON: JSON!
}

"""
ClusterRoleBinding grants the permissions defined in a ClusterRole referenced
to a user or a set of users
"""
type ClusterRoleBinding implements Node & Resource {
  "The globally unique identifier of the record"
  id: ID!

  "metadata contains name, namespace, labels and annotations of the record"
  metadata: ObjectMeta

  "Subjects holds references to the objects the ClusterRole applies to"
  subjects: [Subject!]

  "RoleRef references a ClusterRole in the current namespace"
  roleRef: RoleRef

  """
  toJSON returns a REST API compatible representation of the resource. Handy for
  sharing snippets that can then be imported with `sensuctl create`.
  """
  toJSON: JSON!
}

"""
RoleBinding grants the permissions defined in a Role referenced to a user or
a set of users
"""
type RoleBinding implements Node & Resource {
  "The globally unique identifier of the record"
  id: ID!

  "metadata contains name, namespace, labels and annotations of the record"
  metadata: ObjectMeta

  "Subjects holds references to the objects the Role applies to"
  subjects: [Subject!]

  "RoleRef references a Role in the current namespace"
  roleRef: RoleRef

  """
  toJSON returns a REST API compatible representation of the resource. Handy for
  sharing snippets that can then be imported with `sensuctl create`.
  """
  toJSON: JSON!
}

"""
RoleRef maps groups to Roles or ClusterRoles.
"""
type RoleRef {
  "Type of role being referenced."
  type: String!

  "Name of the resource being referenced"
  name: String!
}

"""
Subjects holds references to a role.
"""
type Subject {
  "Kind of object referenced (user or group)"
  kind: String!
  "Name of the referenced object"
  name: String!
}
