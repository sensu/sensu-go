"""
HookConfig is the specification of a hook
"""
type HookConfig implements Node & Namespaced & Resource {
  "The globally unique identifier of the record"
  id: ID!

  "Namespace in which this record resides"
  namespace: String! @deprecated(reason: "use metadata")

  "Name is the unique identifier for a hook"
  name: String! @deprecated(reason: "use metadata")

  "metadata contains name, namespace, labels and annotations of the record"
  metadata: ObjectMeta

  "Command is the command to be executed"
  command: String

  "Timeout is the timeout, in seconds, at which the hook has to run"
  timeout: Int

  "Stdin indicates if hook requests have stdin enabled"
  stdin: Boolean!

  """
  toJSON returns a REST API compatible representation of the resource. Handy for
  sharing snippets that can then be imported with `sensuctl create`.
  """
  toJSON: JSON!
}

"""
A Hook is a hook specification and optionally the results of the hook's
execution.
"""
type Hook {
  "Config is the specification of a hook"
  config: HookConfig

  "Duration of execution"
  duration: Int

  "Executed describes the time in which the hook request was executed"
  executed: Int

  "Issued describes the time in which the hook request was issued"
  issued: Int

  "Output from the execution of Command"
  output: String

  "Status is the exit status code produced by the hook"
  status: Int
}

type HookList {
  "Hooks is the list of hooks for the check hook"
  hooks: [String!]!

  "Type indicates the type or response code for the check hook"
  type: String!
}
