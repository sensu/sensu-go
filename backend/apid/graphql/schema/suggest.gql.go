// Code generated by scripts/gengraphql.go. DO NOT EDIT.

package schema

import (
	errors "errors"
	graphql1 "github.com/graphql-go/graphql"
	graphql "github.com/sensu/sensu-go/graphql"
)

// SuggestionResultSetFieldResolvers represents a collection of methods whose products represent the
// response values of the 'SuggestionResultSet' type.
type SuggestionResultSetFieldResolvers interface {
	// Values implements response to request for 'values' field.
	Values(p graphql.ResolveParams) ([]string, error)
}

// SuggestionResultSetAliases implements all methods on SuggestionResultSetFieldResolvers interface by using reflection to
// match name of field to a field on the given value. Intent is reduce friction
// of writing new resolvers by removing all the instances where you would simply
// have the resolvers method return a field.
type SuggestionResultSetAliases struct{}

// Values implements response to request for 'values' field.
func (_ SuggestionResultSetAliases) Values(p graphql.ResolveParams) ([]string, error) {
	val, err := graphql.DefaultResolver(p.Source, p.Info.FieldName)
	ret, ok := val.([]string)
	if err != nil {
		return ret, err
	}
	if !ok {
		return ret, errors.New("unable to coerce value for field 'values'")
	}
	return ret, err
}

// SuggestionResultSetType SuggestionResultSet contains a collection of results for the given query.
var SuggestionResultSetType = graphql.NewType("SuggestionResultSet", graphql.ObjectKind)

// RegisterSuggestionResultSet registers SuggestionResultSet object type with given service.
func RegisterSuggestionResultSet(svc *graphql.Service, impl SuggestionResultSetFieldResolvers) {
	svc.RegisterObject(_ObjectTypeSuggestionResultSetDesc, impl)
}
func _ObjTypeSuggestionResultSetValuesHandler(impl interface{}) graphql1.FieldResolveFn {
	resolver := impl.(interface {
		Values(p graphql.ResolveParams) ([]string, error)
	})
	return func(frp graphql1.ResolveParams) (interface{}, error) {
		return resolver.Values(frp)
	}
}

func _ObjectTypeSuggestionResultSetConfigFn() graphql1.ObjectConfig {
	return graphql1.ObjectConfig{
		Description: "SuggestionResultSet contains a collection of results for the given query.",
		Fields: graphql1.Fields{"values": &graphql1.Field{
			Args:              graphql1.FieldConfigArgument{},
			DeprecationReason: "",
			Description:       "self descriptive",
			Name:              "values",
			Type:              graphql1.NewNonNull(graphql1.NewList(graphql1.NewNonNull(graphql1.String))),
		}},
		Interfaces: []*graphql1.Interface{},
		IsTypeOf: func(_ graphql1.IsTypeOfParams) bool {
			// NOTE:
			// Panic by default. Intent is that when Service is invoked, values of
			// these fields are updated with instantiated resolvers. If these
			// defaults are called it is most certainly programmer err.
			// If you're see this comment then: 'Whoops! Sorry, my bad.'
			panic("Unimplemented; see SuggestionResultSetFieldResolvers.")
		},
		Name: "SuggestionResultSet",
	}
}

// describe SuggestionResultSet's configuration; kept private to avoid unintentional tampering of configuration at runtime.
var _ObjectTypeSuggestionResultSetDesc = graphql.ObjectDesc{
	Config:        _ObjectTypeSuggestionResultSetConfigFn,
	FieldHandlers: map[string]graphql.FieldHandler{"values": _ObjTypeSuggestionResultSetValuesHandler},
}

// SuggestionOrder self descriptive
type SuggestionOrder string

// SuggestionOrders holds enum values
var SuggestionOrders = _EnumTypeSuggestionOrderValues{
	ALPHA_ASC:  "ALPHA_ASC",
	ALPHA_DESC: "ALPHA_DESC",
	FREQUENCY:  "FREQUENCY",
}

// SuggestionOrderType self descriptive
var SuggestionOrderType = graphql.NewType("SuggestionOrder", graphql.EnumKind)

// RegisterSuggestionOrder registers SuggestionOrder object type with given service.
func RegisterSuggestionOrder(svc *graphql.Service) {
	svc.RegisterEnum(_EnumTypeSuggestionOrderDesc)
}
func _EnumTypeSuggestionOrderConfigFn() graphql1.EnumConfig {
	return graphql1.EnumConfig{
		Description: "self descriptive",
		Name:        "SuggestionOrder",
		Values: graphql1.EnumValueConfigMap{
			"ALPHA_ASC": &graphql1.EnumValueConfig{
				DeprecationReason: "",
				Description:       "self descriptive",
				Value:             "ALPHA_ASC",
			},
			"ALPHA_DESC": &graphql1.EnumValueConfig{
				DeprecationReason: "",
				Description:       "self descriptive",
				Value:             "ALPHA_DESC",
			},
			"FREQUENCY": &graphql1.EnumValueConfig{
				DeprecationReason: "",
				Description:       "self descriptive",
				Value:             "FREQUENCY",
			},
		},
	}
}

// describe SuggestionOrder's configuration; kept private to avoid unintentional tampering of configuration at runtime.
var _EnumTypeSuggestionOrderDesc = graphql.EnumDesc{Config: _EnumTypeSuggestionOrderConfigFn}

type _EnumTypeSuggestionOrderValues struct {
	// ALPHA_ASC - self descriptive
	ALPHA_ASC SuggestionOrder
	// ALPHA_DESC - self descriptive
	ALPHA_DESC SuggestionOrder
	// FREQUENCY - self descriptive
	FREQUENCY SuggestionOrder
}
