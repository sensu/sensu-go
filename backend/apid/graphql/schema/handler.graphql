"""
A Handler is a handler specification.
"""
type Handler implements Node, Namespaced, HasMetadata {
  "The globally unique identifier of the record."
  id: ID!

  "namespace in which this record resides"
  namespace: String!

  "Name is the unique identifier for a handler."
  name: String!

  "metadata contains name, namespace, labels and annotations of the record"
  metadata: ObjectMeta!

  "Type is the handler type, i.e. pipe."
  type: String!

  "Command is the command to be executed for a pipe handler."
  command: String

  "Timeout is the handler timeout in seconds."
  timeout: Int

  "Socket contains configuration for a TCP or UDP handler."
  socket: HandlerSocket

  "Mutator is the handler event data mutator."
  mutator: Mutator

  "Handlers is a list of handler names for a handler set."
  handlers: [Handler!]

  "Filters is a list of filters name to evaluate before executing this handler"
  filters: [String!]!

  "EnvVars is a list of environment variables to use with command execution"
  envVars: [String!]!
}

"""
HandlerSocket contains configuration for a TCP or UDP handler.
"""
type HandlerSocket {
  "Host is the socket peer address."
  host: String!

  "Port is the socket peer port."
  port: Int
}

"A connection to a sequence of records."
type HandlerConnection {
  nodes: [Handler!]!
  pageInfo: OffsetPageInfo!
}

"An edge in a connection."
type HandlerEdge {
  node: Handler
  cursor: String!
}

"Describes ways in which a list of handlers can be ordered."
enum HandlerListOrder {
  NAME
  NAME_DESC
}
