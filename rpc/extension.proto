syntax = "proto3";

import "github.com/sensu/sensu-go/types/event.proto";

package sensu.rpc;

option go_package = "rpc";

message HandleEventRequest {
  types.Event event = 1;
  bytes mutated_event = 2;
}

message HandleEventResponse {
  string error = 1;
  string output = 2;
}

message MutateEventRequest {
  types.Event event = 1;
}

message MutateEventResponse {
  bytes mutated_event = 1;
  string error = 2;
}

message FilterEventRequest {
  types.Event event = 1;
}

message FilterEventResponse {
  bool filtered = 1;
  string error = 2;
}

// Extension services can be implemented by third parties. They receive
// HandleEvent requests and return Handlers. Sensu will dispatch the Handler
// that is returned.
//
// Extensions must be registered before they can be used. See the sensuctl
// documentation for more information about how extensions are registered.
service Extension {
	rpc HandleEvent(HandleEventRequest) returns (HandleEventResponse) {}
	rpc MutateEvent(MutateEventRequest) returns (MutateEventResponse) {}
	rpc FilterEvent(FilterEventRequest) returns (FilterEventResponse) {}
}
