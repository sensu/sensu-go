// Code generated by protoc-gen-go. DO NOT EDIT.
// source: extension.proto

/*
Package rpc is a generated protocol buffer package.

It is generated from these files:
	extension.proto

It has these top-level messages:
	HandleEventRequest
	HandleEventResponse
	MutateEventRequest
	MutateEventResponse
*/
package rpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import sensu_types6 "github.com/sensu/sensu-go/types"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type HandleEventRequest struct {
	Event        *sensu_types6.Event `protobuf:"bytes,1,opt,name=event" json:"event,omitempty"`
	MutatedEvent []byte              `protobuf:"bytes,2,opt,name=mutated_event,json=mutatedEvent,proto3" json:"mutated_event,omitempty"`
}

func (m *HandleEventRequest) Reset()                    { *m = HandleEventRequest{} }
func (m *HandleEventRequest) String() string            { return proto.CompactTextString(m) }
func (*HandleEventRequest) ProtoMessage()               {}
func (*HandleEventRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *HandleEventRequest) GetEvent() *sensu_types6.Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *HandleEventRequest) GetMutatedEvent() []byte {
	if m != nil {
		return m.MutatedEvent
	}
	return nil
}

type HandleEventResponse struct {
	Error string `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
}

func (m *HandleEventResponse) Reset()                    { *m = HandleEventResponse{} }
func (m *HandleEventResponse) String() string            { return proto.CompactTextString(m) }
func (*HandleEventResponse) ProtoMessage()               {}
func (*HandleEventResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *HandleEventResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type MutateEventRequest struct {
	Event *sensu_types6.Event `protobuf:"bytes,1,opt,name=event" json:"event,omitempty"`
}

func (m *MutateEventRequest) Reset()                    { *m = MutateEventRequest{} }
func (m *MutateEventRequest) String() string            { return proto.CompactTextString(m) }
func (*MutateEventRequest) ProtoMessage()               {}
func (*MutateEventRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *MutateEventRequest) GetEvent() *sensu_types6.Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type MutateEventResponse struct {
	MutatedEvent []byte `protobuf:"bytes,1,opt,name=mutated_event,json=mutatedEvent,proto3" json:"mutated_event,omitempty"`
	Error        string `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *MutateEventResponse) Reset()                    { *m = MutateEventResponse{} }
func (m *MutateEventResponse) String() string            { return proto.CompactTextString(m) }
func (*MutateEventResponse) ProtoMessage()               {}
func (*MutateEventResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *MutateEventResponse) GetMutatedEvent() []byte {
	if m != nil {
		return m.MutatedEvent
	}
	return nil
}

func (m *MutateEventResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterType((*HandleEventRequest)(nil), "sensu.rpc.HandleEventRequest")
	proto.RegisterType((*HandleEventResponse)(nil), "sensu.rpc.HandleEventResponse")
	proto.RegisterType((*MutateEventRequest)(nil), "sensu.rpc.MutateEventRequest")
	proto.RegisterType((*MutateEventResponse)(nil), "sensu.rpc.MutateEventResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Extension service

type ExtensionClient interface {
	HandleEvent(ctx context.Context, in *HandleEventRequest, opts ...grpc.CallOption) (*HandleEventResponse, error)
	MutateEvent(ctx context.Context, in *MutateEventRequest, opts ...grpc.CallOption) (*MutateEventResponse, error)
}

type extensionClient struct {
	cc *grpc.ClientConn
}

func NewExtensionClient(cc *grpc.ClientConn) ExtensionClient {
	return &extensionClient{cc}
}

func (c *extensionClient) HandleEvent(ctx context.Context, in *HandleEventRequest, opts ...grpc.CallOption) (*HandleEventResponse, error) {
	out := new(HandleEventResponse)
	err := grpc.Invoke(ctx, "/sensu.rpc.Extension/HandleEvent", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *extensionClient) MutateEvent(ctx context.Context, in *MutateEventRequest, opts ...grpc.CallOption) (*MutateEventResponse, error) {
	out := new(MutateEventResponse)
	err := grpc.Invoke(ctx, "/sensu.rpc.Extension/MutateEvent", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Extension service

type ExtensionServer interface {
	HandleEvent(context.Context, *HandleEventRequest) (*HandleEventResponse, error)
	MutateEvent(context.Context, *MutateEventRequest) (*MutateEventResponse, error)
}

func RegisterExtensionServer(s *grpc.Server, srv ExtensionServer) {
	s.RegisterService(&_Extension_serviceDesc, srv)
}

func _Extension_HandleEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HandleEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExtensionServer).HandleEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sensu.rpc.Extension/HandleEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExtensionServer).HandleEvent(ctx, req.(*HandleEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Extension_MutateEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MutateEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExtensionServer).MutateEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sensu.rpc.Extension/MutateEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExtensionServer).MutateEvent(ctx, req.(*MutateEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Extension_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sensu.rpc.Extension",
	HandlerType: (*ExtensionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HandleEvent",
			Handler:    _Extension_HandleEvent_Handler,
		},
		{
			MethodName: "MutateEvent",
			Handler:    _Extension_MutateEvent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "extension.proto",
}

func init() { proto.RegisterFile("extension.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 270 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x91, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0xbb, 0x95, 0x08, 0x99, 0x56, 0x84, 0xa9, 0x07, 0x29, 0x28, 0x65, 0xbd, 0x04, 0x8a,
	0x1b, 0xa8, 0x77, 0x0f, 0x42, 0xc1, 0x8b, 0x22, 0x39, 0x7a, 0x91, 0x36, 0x1d, 0x6a, 0xc1, 0xee,
	0xae, 0xbb, 0x1b, 0xd1, 0xdf, 0xe4, 0x9f, 0x94, 0xee, 0x44, 0x4d, 0x88, 0x5e, 0x7a, 0x09, 0x64,
	0xf2, 0xde, 0x9b, 0x6f, 0x5e, 0xe0, 0x98, 0xde, 0x03, 0x69, 0xbf, 0x31, 0x5a, 0x59, 0x67, 0x82,
	0xc1, 0xd4, 0x93, 0xf6, 0x95, 0x72, 0xb6, 0x1c, 0x4f, 0xd7, 0x9b, 0xf0, 0x5c, 0x2d, 0x55, 0x69,
	0xb6, 0x79, 0x9c, 0xf2, 0xf3, 0x72, 0x6d, 0xf2, 0xf0, 0x61, 0xc9, 0xe7, 0xf4, 0x46, 0x3a, 0xb0,
	0x4f, 0x96, 0x80, 0xb7, 0x0b, 0xbd, 0x7a, 0xa1, 0xf9, 0x6e, 0x58, 0xd0, 0x6b, 0x45, 0x3e, 0x60,
	0x06, 0x49, 0x14, 0x9d, 0x8a, 0x89, 0xc8, 0x06, 0x33, 0x54, 0x9c, 0x1e, 0xed, 0x8a, 0x95, 0x2c,
	0xc0, 0x0b, 0x38, 0xda, 0x56, 0x61, 0x11, 0x68, 0xf5, 0xc4, 0x8e, 0xfe, 0x44, 0x64, 0xc3, 0x62,
	0x58, 0x0f, 0xa3, 0x56, 0x4e, 0x61, 0xd4, 0x5a, 0xe2, 0xad, 0xd1, 0x9e, 0xf0, 0x04, 0x12, 0x72,
	0xce, 0xb8, 0xb8, 0x25, 0x2d, 0xf8, 0x45, 0x5e, 0x03, 0xde, 0x45, 0xf3, 0x7e, 0x44, 0xf2, 0x01,
	0x46, 0x2d, 0x7f, 0xbd, 0xac, 0x03, 0x2a, 0xba, 0xa0, 0xbf, 0x44, 0xfd, 0x06, 0xd1, 0xec, 0x53,
	0x40, 0x3a, 0xff, 0xee, 0x1b, 0xef, 0x61, 0xd0, 0x38, 0x06, 0xcf, 0xd4, 0x4f, 0xf3, 0xaa, 0xdb,
	0xe4, 0xf8, 0xfc, 0xbf, 0xcf, 0x8c, 0x25, 0x7b, 0xbb, 0xbc, 0x06, 0x6f, 0x2b, 0xaf, 0xdb, 0x43,
	0x2b, 0xef, 0x8f, 0x33, 0x65, 0xef, 0x26, 0x79, 0x3c, 0x70, 0xb6, 0x5c, 0x1e, 0xc6, 0xff, 0x7b,
	0xf5, 0x15, 0x00, 0x00, 0xff, 0xff, 0xe2, 0x20, 0xb4, 0x4a, 0x2a, 0x02, 0x00, 0x00,
}
