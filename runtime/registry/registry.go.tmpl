package registry

// automatically generated file, do not edit!

import (
  "fmt"
  "reflect"

  "github.com/sensu/sensu-go/internal/apis/meta"
)

type registry map[meta.TypeMeta]meta.GroupVersionKind

var typeRegistry = registry{ {{ range $index, $t := . }}
  meta.TypeMeta{Kind: "{{ $t.Kind }}", APIVersion: "{{ $t.APIVersion }}"}: {{ $t.APIVersion }}.{{ $t.Kind }}{}, {{ end }}
}

// Resolve returns a zero-valued meta.GroupVersionKind, given a meta.TypeMeta.
// If the type does not exist, then an error will be returned.
func Resolve(mt meta.TypeMeta) (meta.GroupVersionKind, error) {
	t, ok := typeRegistry[mt]
  if !ok {
    return nil, fmt.Errorf("type could not be found: %v", mt)
  }
  return t, nil
}
