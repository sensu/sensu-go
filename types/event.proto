syntax = "proto3";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "entity.proto";
import "check.proto";
import "metrics.proto";
import "hook.proto";

package sensu.types;

option go_package = "types";
option (gogoproto.populate_all) = true;
option (gogoproto.equal_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.testgen_all) = true;

// An Event is the encapsulating type sent across the Sensu websocket transport.
message Event {
  // Timestamp is the time in seconds since the Epoch.
  int64 timestamp = 1;

  // Entity describes the entity in which the event occurred.
  Entity entity = 2 [(gogoproto.nullable) = true];

  // Check describes the result of a check; if event is associated to check execution.
  Check check = 3 [(gogoproto.nullable) = true];

  // Metrics ...
  Metrics metrics = 4 [(gogoproto.nullable) = true];

  // Silenced is a list of silenced entry ids (subscription and check name)
  repeated string silenced = 5 [(gogoproto.nullable) = true, deprecated = true];

  // Hooks describes the results of multiple hooks; if event is associated to hook execution.
  repeated Hook hooks = 6 [(gogoproto.nullable) = true, deprecated = true];
}
