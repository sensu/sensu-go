syntax = "proto3";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

package sensu.types;

option go_package = "types";
option (gogoproto.populate_all) = true;
option (gogoproto.equal_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.testgen_all) = true;

// Silenced is the representation of a silence entry.
message Silenced {
  // ID is the combination of subscription and check name (subscription:checkname)
  string id = 1 [(gogoproto.customname) = "ID"];

  // Expire is the number of seconds the entry will live
  int64 expire = 2 [(gogoproto.nullable) = true, (gogoproto.jsontag) = "expire"];

  // ExpireOnResolve defaults to false, clears the entry on resolution when set
  // to true
  bool expire_on_resolve = 3 [(gogoproto.nullable) = true, (gogoproto.jsontag) = "expire_on_resolve"];

  // Creator is the author of the silenced entry
  string creator = 4 [(gogoproto.nullable) = true];

  // Check is the name of the check event to be silenced.
  string check = 5;

  // Reason is used to provide context to the entry
  string reason = 6 [(gogoproto.nullable) = true];

  // Subscription is the name of the subscription to which the entry applies.
  string subscription = 7 [(gogoproto.nullable) = true];

  // Organization indicates to which org a silenced entry belongs to.
  string organization = 8;

  // Environment indicates which env a silenced entry belongs to.
  string environment = 9;

  // Begin is a timestamp at which the silenced entry takes effect.
  int64 begin = 10 [(gogoproto.jsontag) = "begin"];
}
