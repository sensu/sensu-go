// +build ignore

package main

import (
	"bytes"
	"fmt"
	"html/template"
	"io/ioutil"
	"log"
	"net/http"

	"github.com/shurcooL/vfsgen"
)

const filenameVfsGen = "assets_vfsgen.go"
const filenameGlueFile = "assets_glue.go"

var t = template.Must(template.New("").Parse(`// Code generated by vfsgen; DO NOT EDIT.
{{with .BuildTags}}// +build {{.}}
{{end}}
package dashboard

func init() {
	{{.PublicVariableName}} = {{.GeneratedVariableName}}
}
`))

func main() {
	// box files
	dir := http.Dir("build")
	err := vfsgen.Generate(dir, vfsgen.Options{
		Filename:     filenameVfsGen,
		PackageName:  "dashboard",
		BuildTags:    "!dev",
		VariableName: "vfsAssets",
	})
	if err != nil {
		log.Fatalln(err)
	}

	// glue
	buf := &bytes.Buffer{}
	t.Execute(buf, struct {
		BuildTags             string
		PublicVariableName    string
		GeneratedVariableName string
	}{
		BuildTags:             "!dev",
		PublicVariableName:    "Assets",
		GeneratedVariableName: "vfsAssets",
	})

	fmt.Printf("writing %s\n", filenameGlueFile)
	err = ioutil.WriteFile(filenameGlueFile, buf.Bytes(), 0644)
	if err != nil {
		log.Fatalln(err)
	}
}
