// Code generated by mockery v1.0.0
package mockqueue

import context "context"
import mock "github.com/stretchr/testify/mock"
import types "github.com/sensu/sensu-go/types"

// Queue is an autogenerated mock type for the Queue type
type Queue struct {
	mock.Mock
}

// Dequeue provides a mock function with given fields: ctx
func (_m *Queue) Dequeue(ctx context.Context) (types.QueueItem, error) {
	ret := _m.Called(ctx)

	var r0 types.QueueItem
	if rf, ok := ret.Get(0).(func(context.Context) types.QueueItem); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(types.QueueItem)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Enqueue provides a mock function with given fields: ctx, value
func (_m *Queue) Enqueue(ctx context.Context, value string) error {
	ret := _m.Called(ctx, value)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(ctx, value)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
