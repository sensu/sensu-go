// Code generated by generate_fieldsetmap. DO NOT EDIT.

package v2

// FieldsetFn returns the procedure used to produce a resource's fieldset.
type FieldsetFn interface {
	Prefix() string
	Fields(_ Resource) map[string]string
}

// LookupFieldsetFn is used to dynamically look up fieldset func for given typename
func LookupFieldsetFn(typename string) (FieldsetFn, bool) {
	fset, ok := fieldsetMap[typename]
	return fset, ok
}

type fieldsetDesc struct {
	prefix string
	fields func(_ Resource) map[string]string
}

func (f *fieldsetDesc) Prefix() string {
	return f.prefix
}

func (f *fieldsetDesc) Fields(v Resource) map[string]string {
	return f.fields(v)
}

// fieldsetMap is used to dynamically look up fieldset func for given type
var fieldsetMap = map[string]FieldsetFn{
	"APIKey": &fieldsetDesc{
		prefix: "api_key",
		fields: APIKeyFields,
	},

	"Asset": &fieldsetDesc{
		prefix: "asset",
		fields: AssetFields,
	},

	"CheckConfig": &fieldsetDesc{
		prefix: "check",
		fields: CheckConfigFields,
	},

	"ClusterRoleBinding": &fieldsetDesc{
		prefix: "clusterrolebinding",
		fields: ClusterRoleBindingFields,
	},

	"ClusterRole": &fieldsetDesc{
		prefix: "clusterrole",
		fields: ClusterRoleFields,
	},

	"Entity": &fieldsetDesc{
		prefix: "entity",
		fields: EntityFields,
	},

	"Event": &fieldsetDesc{
		prefix: "event",
		fields: EventFields,
	},

	"EventFilter": &fieldsetDesc{
		prefix: "filter",
		fields: EventFilterFields,
	},

	"Extension": &fieldsetDesc{
		prefix: "extension",
		fields: ExtensionFields,
	},

	"Handler": &fieldsetDesc{
		prefix: "handler",
		fields: HandlerFields,
	},

	"HookConfig": &fieldsetDesc{
		prefix: "hook",
		fields: HookConfigFields,
	},

	"Mutator": &fieldsetDesc{
		prefix: "mutator",
		fields: MutatorFields,
	},

	"Namespace": &fieldsetDesc{
		prefix: "namespace",
		fields: NamespaceFields,
	},

	"Pipeline": &fieldsetDesc{
		prefix: "pipeline",
		fields: PipelineFields,
	},

	"RoleBinding": &fieldsetDesc{
		prefix: "rolebinding",
		fields: RoleBindingFields,
	},

	"Role": &fieldsetDesc{
		prefix: "role",
		fields: RoleFields,
	},

	"Silenced": &fieldsetDesc{
		prefix: "silenced",
		fields: SilencedFields,
	},

	"User": &fieldsetDesc{
		prefix: "user",
		fields: UserFields,
	},
}
