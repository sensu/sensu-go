syntax = "proto3";

import "github.com/gogo/protobuf@v1.3.1/gogoproto/gogo.proto";
import "github.com/sensu/sensu-go/api/core/v2/meta.proto";
import "github.com/sensu/sensu-go/api/core/v2/entity.proto";

package sensu.core.v3;

option go_package = "v3";
option (gogoproto.populate_all) = true;
option (gogoproto.equal_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.testgen_all) = true;

// EntityConfig represents entity configuration.
message EntityConfig {
  // Metadata contains the name, namespace, labels and annotations of the
  // entity.
  sensu.core.v2.ObjectMeta metadata = 1 [ (gogoproto.jsontag) = "metadata", (gogoproto.nullable) = true ];

  // EntityClass represents the class of the entity. It can be "agent",
  // "proxy", or "backend".
  string entity_class = 2 [ (gogoproto.jsontag) = "entity_class" ];

  // User is the username the entity is connecting as, if the entity is an
  // agent entity.
  string user = 3;

  // Subscriptions are a weak relationship between entities and checks. The
  // scheduler uses subscriptions to make entities to checks when scheduling.
  repeated string subscriptions = 4 [ (gogoproto.jsontag) = "subscriptions" ];

  // Deregister, if true, will result in the entity being deleted when the
  // entity is an agent, and the agent disconnects its session.
  bool deregister = 5 [ (gogoproto.jsontag) = "deregister" ];

  // Deregistration contains configuration for Sensu entity de-registration.
  sensu.core.v2.Deregistration deregistration = 6 [ (gogoproto.nullable) = false ];

  // KeepaliveHandlers contains a list of handlers to use for the entity's
  // keepalive events.
  repeated string keepalive_handlers = 7;

  // Redact contains the fields to redact on the entity, if the entity is an]
  // agent entity.
  repeated string redact = 8;
}
