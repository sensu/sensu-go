// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/sensu/sensu-go/api/core/v3/entity_state.proto

package v3

import (
	bytes "bytes"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	v2 "github.com/sensu/sensu-go/api/core/v2"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// EntityState represents entity state. Unlike configuration, state is
// typically only maintained for agent entities, although it can be maintained
// for proxy entities in certain circumstances.
type EntityState struct {
	// Metadata contains the name, namespace, labels and annotations of the
	// entity.
	Metadata *v2.ObjectMeta `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata"`
	// System contains information about the system that the Agent process
	// is running on, used for additional Entity context.
	System v2.System `protobuf:"bytes,2,opt,name=system,proto3" json:"system"`
	// LastSeen is a unix timestamp that represents when the entity was last
	// observed by the keepalive system.
	LastSeen int64 `protobuf:"varint,3,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen"`
	// SensuAgentVersion is the sensu-agent version.
	SensuAgentVersion    string   `protobuf:"bytes,4,opt,name=sensu_agent_version,json=sensuAgentVersion,proto3" json:"sensu_agent_version"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EntityState) Reset()         { *m = EntityState{} }
func (m *EntityState) String() string { return proto.CompactTextString(m) }
func (*EntityState) ProtoMessage()    {}
func (*EntityState) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f316efbec1fb581, []int{0}
}
func (m *EntityState) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EntityState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EntityState.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EntityState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntityState.Merge(m, src)
}
func (m *EntityState) XXX_Size() int {
	return m.Size()
}
func (m *EntityState) XXX_DiscardUnknown() {
	xxx_messageInfo_EntityState.DiscardUnknown(m)
}

var xxx_messageInfo_EntityState proto.InternalMessageInfo

func (m *EntityState) GetMetadata() *v2.ObjectMeta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *EntityState) GetSystem() v2.System {
	if m != nil {
		return m.System
	}
	return v2.System{}
}

func (m *EntityState) GetLastSeen() int64 {
	if m != nil {
		return m.LastSeen
	}
	return 0
}

func (m *EntityState) GetSensuAgentVersion() string {
	if m != nil {
		return m.SensuAgentVersion
	}
	return ""
}

func init() {
	proto.RegisterType((*EntityState)(nil), "sensu.core.v3.EntityState")
}

func init() {
	proto.RegisterFile("github.com/sensu/sensu-go/api/core/v3/entity_state.proto", fileDescriptor_2f316efbec1fb581)
}

var fileDescriptor_2f316efbec1fb581 = []byte{
	// 343 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xb2, 0x48, 0xcf, 0x2c, 0xc9,
	0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0x2f, 0x4e, 0xcd, 0x2b, 0x2e, 0x85, 0x90, 0xba, 0xe9,
	0xf9, 0xfa, 0x89, 0x05, 0x99, 0xfa, 0xc9, 0xf9, 0x45, 0xa9, 0xfa, 0x65, 0xc6, 0xfa, 0xa9, 0x79,
	0x25, 0x99, 0x25, 0x95, 0xf1, 0xc5, 0x25, 0x89, 0x25, 0xa9, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9,
	0x42, 0xbc, 0x60, 0x85, 0x7a, 0x20, 0x15, 0x7a, 0x65, 0xc6, 0x52, 0x26, 0x48, 0x06, 0xa5, 0xe7,
	0xa7, 0xe7, 0xeb, 0x83, 0x55, 0x25, 0x95, 0xa6, 0x39, 0x94, 0x19, 0xea, 0x19, 0xeb, 0x19, 0x82,
	0x05, 0xc1, 0x62, 0x60, 0x16, 0xc4, 0x10, 0x29, 0x03, 0x62, 0xac, 0x37, 0xd2, 0xcf, 0x4d, 0x2d,
	0x49, 0x84, 0xea, 0x30, 0x22, 0x4e, 0x07, 0xc4, 0xc1, 0x10, 0x3d, 0x4a, 0x0d, 0x4c, 0x5c, 0xdc,
	0xae, 0x60, 0x81, 0x60, 0x90, 0x07, 0x84, 0xdc, 0xb9, 0x38, 0x40, 0x26, 0xa6, 0x24, 0x96, 0x24,
	0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x1b, 0x49, 0xea, 0x21, 0xfb, 0xc6, 0x48, 0xcf, 0x3f, 0x29,
	0x2b, 0x35, 0xb9, 0xc4, 0x37, 0xb5, 0x24, 0xd1, 0x49, 0xe0, 0xc4, 0x3d, 0x79, 0xc6, 0x57, 0xf7,
	0xe4, 0xe1, 0x5a, 0x82, 0xe0, 0x2c, 0x21, 0x63, 0x2e, 0xb6, 0xe2, 0xca, 0xe2, 0x92, 0xd4, 0x5c,
	0x09, 0x26, 0xb0, 0x31, 0xa2, 0x68, 0xc6, 0x04, 0x83, 0x25, 0x9d, 0x58, 0x4e, 0xdc, 0x93, 0x67,
	0x08, 0x82, 0x2a, 0x15, 0xd2, 0xe2, 0xe2, 0xcc, 0x49, 0x2c, 0x2e, 0x89, 0x2f, 0x4e, 0x4d, 0xcd,
	0x93, 0x60, 0x56, 0x60, 0xd4, 0x60, 0x76, 0xe2, 0x7d, 0x75, 0x4f, 0x1e, 0x21, 0x18, 0xc4, 0x01,
	0x62, 0x06, 0xa7, 0xa6, 0xe6, 0x09, 0xb9, 0x73, 0x09, 0x83, 0x4d, 0x8c, 0x4f, 0x4c, 0x4f, 0xcd,
	0x2b, 0x89, 0x2f, 0x4b, 0x2d, 0x2a, 0xce, 0xcc, 0xcf, 0x93, 0x60, 0x51, 0x60, 0xd4, 0xe0, 0x74,
	0x12, 0x7f, 0x75, 0x4f, 0x1e, 0x9b, 0x74, 0x90, 0x20, 0x58, 0xd0, 0x11, 0x24, 0x16, 0x06, 0x11,
	0x72, 0x52, 0xf8, 0xf1, 0x50, 0x8e, 0x71, 0xc5, 0x23, 0x39, 0xc6, 0x1d, 0x8f, 0xe4, 0x18, 0x4f,
	0x3c, 0x92, 0x63, 0xbc, 0xf0, 0x48, 0x8e, 0xf1, 0xc1, 0x23, 0x39, 0xc6, 0x19, 0x8f, 0xe5, 0x18,
	0xa2, 0x98, 0xca, 0x8c, 0x93, 0xd8, 0xc0, 0x61, 0x65, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x2a,
	0x4d, 0x2e, 0x3b, 0x12, 0x02, 0x00, 0x00,
}

func (this *EntityState) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*EntityState)
	if !ok {
		that2, ok := that.(EntityState)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Metadata.Equal(that1.Metadata) {
		return false
	}
	if !this.System.Equal(&that1.System) {
		return false
	}
	if this.LastSeen != that1.LastSeen {
		return false
	}
	if this.SensuAgentVersion != that1.SensuAgentVersion {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (m *EntityState) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EntityState) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EntityState) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.SensuAgentVersion) > 0 {
		i -= len(m.SensuAgentVersion)
		copy(dAtA[i:], m.SensuAgentVersion)
		i = encodeVarintEntityState(dAtA, i, uint64(len(m.SensuAgentVersion)))
		i--
		dAtA[i] = 0x22
	}
	if m.LastSeen != 0 {
		i = encodeVarintEntityState(dAtA, i, uint64(m.LastSeen))
		i--
		dAtA[i] = 0x18
	}
	{
		size, err := m.System.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintEntityState(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if m.Metadata != nil {
		{
			size, err := m.Metadata.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintEntityState(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintEntityState(dAtA []byte, offset int, v uint64) int {
	offset -= sovEntityState(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func NewPopulatedEntityState(r randyEntityState, easy bool) *EntityState {
	this := &EntityState{}
	if r.Intn(5) != 0 {
		this.Metadata = v2.NewPopulatedObjectMeta(r, easy)
	}
	v1 := v2.NewPopulatedSystem(r, easy)
	this.System = *v1
	this.LastSeen = int64(r.Int63())
	if r.Intn(2) == 0 {
		this.LastSeen *= -1
	}
	this.SensuAgentVersion = string(randStringEntityState(r))
	if !easy && r.Intn(10) != 0 {
		this.XXX_unrecognized = randUnrecognizedEntityState(r, 5)
	}
	return this
}

type randyEntityState interface {
	Float32() float32
	Float64() float64
	Int63() int64
	Int31() int32
	Uint32() uint32
	Intn(n int) int
}

func randUTF8RuneEntityState(r randyEntityState) rune {
	ru := r.Intn(62)
	if ru < 10 {
		return rune(ru + 48)
	} else if ru < 36 {
		return rune(ru + 55)
	}
	return rune(ru + 61)
}
func randStringEntityState(r randyEntityState) string {
	v2 := r.Intn(100)
	tmps := make([]rune, v2)
	for i := 0; i < v2; i++ {
		tmps[i] = randUTF8RuneEntityState(r)
	}
	return string(tmps)
}
func randUnrecognizedEntityState(r randyEntityState, maxFieldNumber int) (dAtA []byte) {
	l := r.Intn(5)
	for i := 0; i < l; i++ {
		wire := r.Intn(4)
		if wire == 3 {
			wire = 5
		}
		fieldNumber := maxFieldNumber + r.Intn(100)
		dAtA = randFieldEntityState(dAtA, r, fieldNumber, wire)
	}
	return dAtA
}
func randFieldEntityState(dAtA []byte, r randyEntityState, fieldNumber int, wire int) []byte {
	key := uint32(fieldNumber)<<3 | uint32(wire)
	switch wire {
	case 0:
		dAtA = encodeVarintPopulateEntityState(dAtA, uint64(key))
		v3 := r.Int63()
		if r.Intn(2) == 0 {
			v3 *= -1
		}
		dAtA = encodeVarintPopulateEntityState(dAtA, uint64(v3))
	case 1:
		dAtA = encodeVarintPopulateEntityState(dAtA, uint64(key))
		dAtA = append(dAtA, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
	case 2:
		dAtA = encodeVarintPopulateEntityState(dAtA, uint64(key))
		ll := r.Intn(100)
		dAtA = encodeVarintPopulateEntityState(dAtA, uint64(ll))
		for j := 0; j < ll; j++ {
			dAtA = append(dAtA, byte(r.Intn(256)))
		}
	default:
		dAtA = encodeVarintPopulateEntityState(dAtA, uint64(key))
		dAtA = append(dAtA, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
	}
	return dAtA
}
func encodeVarintPopulateEntityState(dAtA []byte, v uint64) []byte {
	for v >= 1<<7 {
		dAtA = append(dAtA, uint8(uint64(v)&0x7f|0x80))
		v >>= 7
	}
	dAtA = append(dAtA, uint8(v))
	return dAtA
}
func (m *EntityState) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Metadata != nil {
		l = m.Metadata.Size()
		n += 1 + l + sovEntityState(uint64(l))
	}
	l = m.System.Size()
	n += 1 + l + sovEntityState(uint64(l))
	if m.LastSeen != 0 {
		n += 1 + sovEntityState(uint64(m.LastSeen))
	}
	l = len(m.SensuAgentVersion)
	if l > 0 {
		n += 1 + l + sovEntityState(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovEntityState(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozEntityState(x uint64) (n int) {
	return sovEntityState(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *EntityState) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowEntityState
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EntityState: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EntityState: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Metadata", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEntityState
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthEntityState
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthEntityState
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Metadata == nil {
				m.Metadata = &v2.ObjectMeta{}
			}
			if err := m.Metadata.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field System", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEntityState
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthEntityState
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthEntityState
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.System.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastSeen", wireType)
			}
			m.LastSeen = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEntityState
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastSeen |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SensuAgentVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowEntityState
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthEntityState
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthEntityState
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SensuAgentVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipEntityState(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthEntityState
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthEntityState
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipEntityState(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowEntityState
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowEntityState
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowEntityState
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthEntityState
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupEntityState
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthEntityState
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthEntityState        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowEntityState          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupEntityState = fmt.Errorf("proto: unexpected end of group")
)
